devtools::install_github('IRkernel/IRkernel')
IRkernel::installspec()  # to register the kernel in the current R installation
devtools::install_github('IRkernel/IRkernel')
IRkernel::installspec()
install.packages("gapminder")
library(gapminder)
str(gapminder)
gapminder[, 2]
head(gapminder[, 2])
head(gapminder[, gapminder$continent='Africa'])
head(gapminder[, gapminder$continent=='Africa'])
install.packages("bayesm")
install.packages("rjson")
install.packages("doParallel")
library(doParallel)
cores=detectCores()
load("/home/lachlan/Dropbox (gsc)/Research.Projects/Projects.bayesBLP/sandboxFolder/sandbox/output2.Rdata")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dbplyr")
knitr::opts_chunk$set(echo = TRUE)
install.packages("knitr")
install.packages("rmarkdown")
install.packages("RSQLite")
library(dbplyr)
library(dplyr)
auctions_db <- src_sqlite("../database/auctions_data.db")
auctions_db
tbl(auctions_db, sql("SELECT AuctionID, Volume, District FROM auctions"))
auctions <- tbl(auctions_db, "auctions")
auctions %>%
select(AuctionID, Volume, District)
bids <- tbl(auctions_db, "bids")
head(bids, n=10)
nrow(bids)
show_query(head(bids, n=10))
bids %>%
filter(bidderID %in% c(1,4)) %>%
select(bid, bidderID, auctionID)
bids %>%
filter(bidderID %in% c(1,4)) %>%
select(bidderID, auctionID)
bids %>%
#filter(bidderID %in% c(1,4)) %>%
select(bid, bidderID, auctionID)
bids %>%
select(bid, bidderID, auctionID)
bids %>%
select(Bid, BidderID, AuctionID)
bids %>%
filter(bidderID  c(1,4)) %>%
bids %>%
filter(bidderID %in%  c(1,4)) %>%
select(Bid, BidderID, AuctionID)
bids %>%
filter(bidderID %in%  c(1,4)) %>%
select(Bid, BidderID, AuctionID) %>%
arrange(AuctionID, BidderID)
bids %>%
filter(bidderID %in%  c(1,4)) %>%
select(Bid, BidderID, AuctionID) %>%
arrange(BidderID, AuctionID)
bids %>%
filter(bidderID %% 2 == 0) %>%
select(Bid, BidderID, AuctionID) %>%
arrange(BidderID, AuctionID)
# ... with more rows
subset_bids <- bids %>%
filter(bidderID %% 2 == 0) %>%
select(Bid, BidderID, AuctionID) %>%
arrange(BidderID, AuctionID) %>%
collect()
str(subset_bids)
bidders <- tbl(auctions_db, "bidders")
bids %>%
group_by(BidderID) %>%
summarise(smallestBid = min(bid,  na.rm = TRUE),
averageBid  = mean(bid, na.rm = TRUE),
largestBid  = max(bid,  na.rm = TRUE)
) %>%
inner_join(bidders) %>%
select(FirstName, LastName, smallestBid, averageBid, largestBid)
profvis::profvis({cSum <- colSums(mat)
rSum <- rowSums(mat)})
ncol <- 10000
nrow <- 10000
mat <- matrix(rnorm(nrow*ncol),nrow,ncol)
profvis::profvis({cSum <- colSums(mat)
rSum <- rowSums(mat)})
profvis::profvis({cSum <- colSums(mat)
rSum <- rowSums(mat)})
install.packages("rJava")
library(rjava)
install.packages("devtool")
devtools::install_github('PMassicotte/gtrendsR')
library(gtrendsR)
movies_trial <- gtrends(c("mad max", "spectre"),
geo = "US",
time = "2014-01-01 2014-03-01")
movies_trial$interest_over_time
movies_trial$interest_over_time
test_df <- as.data.frame(movies_trial$interest_by_city)
View(test_df)
test_df <- as.data.frame(movies_trial$interest_over_time)
sessionInfo()
library(readr)
knitr::opts_chunk$set(echo = TRUE)
filePath = "/home/lachlan/research/movies/twitter-vader-eda/src/in_data/vader/gnip/counts/"
filenames <- list.files(path = filePath, pattern = '.csv')
lst <- lapply(filenames, function(x)
readr::read_csv(paste(filePath, x, sep="")))
#dat1 <- do.call(bind_rows, Map(cbind, filenames, lst))
df <- dplyr::bind_rows(lst)
dplyr::mutate(vaderClassifier = forcats::fct_recode(vaderClassifier,
"positive"    = "2",
"neutral"     = "1",
"negative"    = "0"
))
df2 <- df %>%
dplyr::mutate(vaderClassifier = forcats::fct_recode(vaderClassifier,
"positive"    = "2",
"neutral"     = "1",
"negative"    = "0"
))
library(magrittr)
df2 <- df %>%
dplyr::mutate(vaderClassifier = forcats::fct_recode(vaderClassifier,
"positive"    = "2",
"neutral"     = "1",
"negative"    = "0"
))
df2 <- df %>%
readr:parse_factor(vaderClassifier) %>%
dplyr::mutate(vaderClassifier = forcats::fct_recode(vaderClassifier,
"positive"    = "2",
"neutral"     = "1",
"negative"    = "0"
))
df2 <- df %>%
readr::parse_factor(vaderClassifier) %>%
dplyr::mutate(vaderClassifier = forcats::fct_recode(vaderClassifier,
"positive"    = "2",
"neutral"     = "1",
"negative"    = "0"
))
df2 <- df %>%
readr::parse_factor(vaderClassifier, c("2", "1", "0"))
df$vaderClassifier <- readr::parse_factor(df$vaderClassifier, c("2", "1", "0"))
df2 <- df %>%
dplyr::mutate(vaderClassifier = forcats::fct_recode(vaderClassifier,
"positive"    = "2",
"neutral"     = "1",
"negative"    = "0"
))
View(df2)
load("~/research/movies/twitter-vader-eda/out/data/gnip/merged_gnip_counts.Rda")
read_rds("~/research/movies/twitter-vader-eda/out/data/gnip/merged_gnip_counts.Rda")
library(magrittr)
counts <- readr::read_rds("~/research/movies/twitter-vader-eda/out/data/twitter/all_counts.Rda")
daily_stats <- readr::read_rds("~/research/movies/twitter-vader-eda/out/data/twitter/all_stats.Rda")
wide_counts <- counts %>% tidyr::spread(vaderClassifier, nTweets)
library(dplyr)
daily_all <- dplyr::inner_join(wide_counts, daily_stats, by=c("mojo_id" = "mojo_id", "date" = "date"))
View(daily_all)
df <- dplyr::inner_join(daily_all, mojo, by=c("mojo_id" = "movie_id"))
mojo <- readr::read_rds("~/research/movies/twitter-vader-eda/out/data/mojo/wide_charac.Rda")
df <- dplyr::inner_join(daily_all, mojo, by=c("mojo_id" = "movie_id"))
View(daily_all)
df <- df %>% dplyr::mutate(
pct_positive  = positive / totalTweets,
pct_neutral   = neutral / totalTweets,
pct_negative  = negative / totalTweets,
pos_neg_ratio = positive / negative
)
View(df)
pre_rel <- df %>%
filter(date <= release_date) %>%
group_by(mojo_id) %>%
summarise(pre_vol = sum(totalTweets),
pos_vol = sum(positive),
neu_vol = sum(neutral),
neg_vol = sum(negative)
)
View(pre_rel)
pre_rel <- df %>%
filter(date <= release_date) %>%
group_by(mojo_id) %>%
summarise(pre_vol = sum(totalTweets, na.rm = TRUE),
pos_vol = sum(positive, na.rm = TRUE),
neu_vol = sum(neutral, na.rm = TRUE),
neg_vol = sum(negative, na.rm = TRUE)
)
pre_rel <- df %>%
filter(date <= release_date) %>%
group_by(mojo_id) %>%
summarise(pre_vol = sum(totalTweets, na.rm = TRUE),
pos_vol = sum(positive, na.rm = TRUE),
neu_vol = sum(neutral, na.rm = TRUE),
neg_vol = sum(negative, na.rm = TRUE)
) %>$
mutate(pos_pct = pos_vol / pre_vol,
neu_pct = neu_vol / pre_vol,
neg_pct = neg_vol / pre_vol
)
pre_rel <- df %>%
filter(date <= release_date) %>%
group_by(mojo_id) %>%
summarise(pre_vol = sum(totalTweets, na.rm = TRUE),
pos_vol = sum(positive, na.rm = TRUE),
neu_vol = sum(neutral, na.rm = TRUE),
neg_vol = sum(negative, na.rm = TRUE)
) %>%
mutate(pos_pct = pos_vol / pre_vol,
neu_pct = neu_vol / pre_vol,
neg_pct = neg_vol / pre_vol
)
pre_rel <- inner_join(pre_rel_tweets, mojo, by = c("mojo_id" = "movie_id"))
pre_rel_tweets <- df %>%
filter(date <= release_date) %>%
group_by(mojo_id) %>%
summarise(pre_vol = sum(totalTweets, na.rm = TRUE),
pos_vol = sum(positive, na.rm = TRUE),
neu_vol = sum(neutral, na.rm = TRUE),
neg_vol = sum(negative, na.rm = TRUE)
) %>%
mutate(pos_pct = pos_vol / pre_vol,
neu_pct = neu_vol / pre_vol,
neg_pct = neg_vol / pre_vol
)
pre_rel <- inner_join(pre_rel_tweets, mojo, by = c("mojo_id" = "movie_id"))
summary(lm(opening_weekend ~ pre_vol, data = pre_rel))
summary(lm(opening_weekend ~ pre_vol + pos_pct, + neu_pct + neg_pct, data = pre_rel))
summary(lm(opening_weekend ~ pre_vol + pos_pct, + neu_pct , data = pre_rel))
summary(lm(opening_weekend ~ pre_vol + pos_pct + neu_pct + neg_pct, data = pre_rel))
summary(lm(opening_weekend ~ pre_vol + pos_pct + neg_pct, data = pre_rel))
summary(lm(log(opening_weekend) ~ log(pre_vol) + pos_pct + neg_pct, data = pre_rel))
summary(lm(log(opening_weekend) ~ log(pre_vol) + log(pos_pct) + log(neg_pct), data = pre_rel))
summary(lm(log(domestic_total_gross) ~ log(pre_vol) + log(pos_pct) + log(neg_pct), data = pre_rel))
summary(lm(log(opening_weekend) ~ pre_vol + pos_pct + neg_pct, data = pre_rel))
summary(lm(opening_weekend ~ pre_vol + pos_pct + neg_pct, data = pre_rel))
summary(lm(log(domestic_total_gross) ~ pre_vol + pos_pct + neg_pct, data = pre_rel))
summary(lm(domestic_total_gross ~ pre_vol + pos_pct + neg_pct, data = pre_rel))
# Simple pre-release tweet regressions
pre_rel_tweets <- df %>%
filter(date <= release_date) %>%
group_by(mojo_id) %>%
summarise(pre_vol = sum(totalTweets, na.rm = TRUE),
pos_vol = sum(positive, na.rm = TRUE),
neu_vol = sum(neutral, na.rm = TRUE),
neg_vol = sum(negative, na.rm = TRUE)
) %>%
mutate(pos_pct = pos_vol / pre_vol,
neu_pct = neu_vol / pre_vol,
neg_pct = neg_vol / pre_vol,
opening_weekend = opening_weekend / 1e6,
domestic_total_gross = domestic_total_gross / 1e6
)
pre_rel <- inner_join(pre_rel_tweets, mojo, by = c("mojo_id" = "movie_id"))
summary(lm(opening_weekend ~ pre_vol + pos_pct + neg_pct, data = pre_rel))
summary(lm(log(opening_weekend) ~ log(pre_vol) + log(pos_pct) + log(neg_pct), data = pre_rel))
summary(lm(domestic_total_gross ~ pre_vol + pos_pct + neg_pct, data = pre_rel))
summary(lm(log(domestic_total_gross) ~ log(pre_vol) + log(pos_pct) + log(neg_pct), data = pre_rel))
summary(lm(domestic_total_gross ~ pre_vol + pos_pct + neg_pct, data = pre_rel))
pre_rel <- inner_join(pre_rel_tweets, mojo, by = c("mojo_id" = "movie_id"))
summary(lm(domestic_total_gross ~ pre_vol + pos_pct + neg_pct, data = pre_rel))
pre_rel_tweets <- df %>%
filter(date <= release_date) %>%
group_by(mojo_id) %>%
summarise(pre_vol = sum(totalTweets, na.rm = TRUE),
pos_vol = sum(positive, na.rm = TRUE),
neu_vol = sum(neutral, na.rm = TRUE),
neg_vol = sum(negative, na.rm = TRUE)
) %>%
mutate(pos_pct = pos_vol / pre_vol,
neu_pct = neu_vol / pre_vol,
neg_pct = neg_vol / pre_vol,
opening_weekend = opening_weekend / 1000000,
domestic_total_gross = domestic_total_gross / 1000000
)
pre_rel <- inner_join(pre_rel_tweets, mojo, by = c("mojo_id" = "movie_id"))
summary(lm(opening_weekend ~ pre_vol + pos_pct + neg_pct, data = pre_rel))
summary(lm(log(opening_weekend) ~ log(pre_vol) + log(pos_pct) + log(neg_pct), data = pre_rel))
summary(lm(domestic_total_gross ~ pre_vol + pos_pct + neg_pct, data = pre_rel))
summary(lm(log(domestic_total_gross) ~ log(pre_vol) + log(pos_pct) + log(neg_pct), data = pre_rel))
pre_rel_tweets <- df %>%
filter(date <= release_date) %>%
group_by(mojo_id) %>%
summarise(pre_vol = sum(totalTweets, na.rm = TRUE),
pos_vol = sum(positive, na.rm = TRUE),
neu_vol = sum(neutral, na.rm = TRUE),
neg_vol = sum(negative, na.rm = TRUE)
) %>%
mutate(pos_pct = pos_vol / pre_vol,
neu_pct = neu_vol / pre_vol,
neg_pct = neg_vol / pre_vol,
)
pre_rel <- inner_join(pre_rel_tweets, mojo, by = c("mojo_id" = "movie_id"))
pre_rel <- pre_rel %>%
mutate(
opening_weekend = opening_weekend / 1000000,
domestic_total_gross = domestic_total_gross / 1000000
)
summary(lm(opening_weekend ~ pre_vol + pos_pct + neg_pct, data = pre_rel))
summary(lm(log(opening_weekend) ~ log(pre_vol) + log(pos_pct) + log(neg_pct), data = pre_rel))
summary(lm(domestic_total_gross ~ pre_vol + pos_pct + neg_pct, data = pre_rel))
summary(lm(log(domestic_total_gross) ~ log(pre_vol) + log(pos_pct) + log(neg_pct), data = pre_rel))
all_tweets <- df %>%
group_by(mojo_id) %>%
summarise(vol     = sum(totalTweets, na.rm = TRUE),
pos_vol = sum(positive, na.rm = TRUE),
neu_vol = sum(neutral, na.rm = TRUE),
neg_vol = sum(negative, na.rm = TRUE)
) %>%
mutate(pos_pct = pos_vol / vol,
neu_pct = neu_vol / vol,
neg_pct = neg_vol / vol
)
all_dta <- inner_join(all_tweets, mojo, by = c("mojo_id" = "movie_id"))
all_dta <- all_dta %>%
mutate(
opening_weekend = opening_weekend / 1000000,
domestic_total_gross = domestic_total_gross / 1000000
)
summary(lm(domestic_total_gross ~ pre_vol + pos_pct + neg_pct, data = all_dta))
summary(lm(log(domestic_total_gross) ~ log(pre_vol) + log(pos_pct) + log(neg_pct), data = all_dta))
summary(lm(domestic_total_gross ~ vol + pos_pct + neg_pct, data = all_dta))
summary(lm(log(domestic_total_gross) ~ log(vol) + log(pos_pct) + log(neg_pct), data = all_dta))
summary(lm(domestic_total_gross ~ log(vol) + log(pos_pct) + log(neg_pct), data = all_dta))
log(
summary(lm(log(domestic_total_gross) ~ log(vol) + log(pos_pct) + log(neg_pct), data = all_dta))
knitr::opts_chunk$set(echo = TRUE)
model1 <- lm(opening_weekend ~ pos_pct + neg_pct,
data = pre_rel)
model2 <- lm(opening_weekend ~ pre_vol + pos_pct + neg_pct,
data = pre_rel)
model3 <- lm(log(opening_weekend) ~ log(pre_vol) + log(pos_pct) + log(neg_pct),
data = pre_rel)
model4 <- lm(log(opening_weekend) ~ log(pos_pct) + log(neg_pct),
data = pre_rel)
model5 <- lm(opening_weekend ~ log(pre_vol) + log(pos_neg_ratio),
data = pre_rel)
pre_rel_tweets <- df %>%
filter(date <= release_date) %>%
group_by(mojo_id) %>%
summarise(pre_vol = sum(totalTweets, na.rm = TRUE),
pos_vol = sum(positive, na.rm = TRUE),
neu_vol = sum(neutral, na.rm = TRUE),
neg_vol = sum(negative, na.rm = TRUE)
) %>%
mutate(pos_pct = pos_vol / pre_vol,
neu_pct = neu_vol / pre_vol,
neg_pct = neg_vol / pre_vol,
pos_neg_ratio = pos_vol / neg_vol
)
pre_rel <- inner_join(pre_rel_tweets, mojo, by = c("mojo_id" = "movie_id"))
pre_rel <- pre_rel %>%
mutate(
opening_weekend = opening_weekend / 1000000,
domestic_total_gross = domestic_total_gross / 1000000
)
days_lag  <- 120  # number of days before release that we include
days_lead <- 60   # number of days post release that we include
all_tweets <- df %>%
dplyr::mutate(since_release = date - release_date) %>%
dplyr::filter(dplyr::between(since_release,
-days_lag, days_lead
)
) %>%
group_by(mojo_id) %>%
summarise(vol     = sum(totalTweets, na.rm = TRUE),
pos_vol = sum(positive, na.rm = TRUE),
neu_vol = sum(neutral, na.rm = TRUE),
neg_vol = sum(negative, na.rm = TRUE)
) %>%
mutate(pos_pct = pos_vol / vol,
neu_pct = neu_vol / vol,
neg_pct = neg_vol / vol,
pos_neg_ratio = pos_vol / neg_vol
)
all_dta <- inner_join(all_tweets, mojo, by = c("mojo_id" = "movie_id"))
all_dta <- all_dta %>%
mutate(
opening_weekend = opening_weekend / 1000000,
domestic_total_gross = domestic_total_gross / 1000000
)
model1 <- lm(opening_weekend ~ pos_pct + neg_pct,
data = pre_rel)
model2 <- lm(opening_weekend ~ pre_vol + pos_pct + neg_pct,
data = pre_rel)
model3 <- lm(log(opening_weekend) ~ log(pre_vol) + log(pos_pct) + log(neg_pct),
data = pre_rel)
model4 <- lm(log(opening_weekend) ~ log(pos_pct) + log(neg_pct),
data = pre_rel)
model5 <- lm(opening_weekend ~ log(pre_vol) + log(pos_neg_ratio),
data = pre_rel)
model6 <- lm(log(opening_weekend) ~ log(pre_vol) + log(pos_neg_ratio),
data = pre_rel)
pattern       <-grep("model", names(.GlobalEnv), value = TRUE)
pattern1_list <-do.call("list", mget(pattern1))
pattern_list  <-do.call("list", mget(pattern))
View(pattern_list)
stargazer::stargazer(pattern)
stargazer::stargazer(pattern_list)
rm(list <- pattern)
rm(list = pattern)
View(counts)
test_df <- dplyr::distinct(counts)
test_df <- dplyr::distinct(daily_stats)
test_df <- dplyr::distinct(daily_stats, date, vaderClassifier, mojo_id)
test_df <- dplyr::distinct(counts, date, vaderClassifier, mojo_id)
View(test_df)
test_df <- dplyr::distinct(counts, date, vaderClassifier, mojo_id, keep_all=TRUE)
View(test_df)
test_df <- dplyr::distinct(counts, date, vaderClassifier, mojo_id, .keep_all=TRUE)
View(daily_stats)
test_df <- dplyr::distinct(daily_stats, date, mojo_id, .keep_all=TRUE)
test_df <- dplyr::distinct(daily_stats, date, vaderClassifier, mojo_id, .keep_all=TRUE)
counts_wide <- counts %>% group_by(mojo_id, date) %>% tidyr::spread(vaderClassifier, nTweets)
counts_wide == wide_counts
all_dta <- all_dta %>%
mutate(pre_vol = pre_rel$pre_vol)
all_dta <- all_dta %>%
mutate(pre_vol  = pre_rel$pre_vol,
post_vol = vol - pre_vol)
summary( lm(domestic_total_gross ~ pre_vol + post_vol + pos_neg_ratio,
data = all_dta) )
summary( lm(log(domestic_total_gross) ~ log(pre_vol) + log(post_vol) + log(pos_neg_ratio),
data = all_dta) )
summary( lm(log(domestic_total_gross - opening_weekend) ~ log(pre_vol) + log(post_vol) + log(pos_neg_ratio),
data = all_dta) )
post_rel <- df %>%
dplyr::mutate(since_release = date - release_date) %>%
dplyr::filter(dplyr::between(since_release,
0, days_lead
)
) %>%
group_by(mojo_id) %>%
summarise(vol     = sum(totalTweets, na.rm = TRUE),
pos_vol = sum(positive, na.rm = TRUE),
neu_vol = sum(neutral, na.rm = TRUE),
neg_vol = sum(negative, na.rm = TRUE)
) %>%
mutate(pos_pct = pos_vol / vol,
neu_pct = neu_vol / vol,
neg_pct = neg_vol / vol,
pos_neg_ratio = pos_vol / neg_vol
)
summary( lm(log(domestic_total_gross - opening_weekend) ~ log(vol) + log(pos_neg_ratio),
data = post_rel) )
post_rel_tweets <- df %>%
dplyr::mutate(since_release = date - release_date) %>%
dplyr::filter(dplyr::between(since_release,
0, days_lead
)
) %>%
group_by(mojo_id) %>%
summarise(vol     = sum(totalTweets, na.rm = TRUE),
pos_vol = sum(positive, na.rm = TRUE),
neu_vol = sum(neutral, na.rm = TRUE),
neg_vol = sum(negative, na.rm = TRUE)
) %>%
mutate(pos_pct = pos_vol / vol,
neu_pct = neu_vol / vol,
neg_pct = neg_vol / vol,
pos_neg_ratio = pos_vol / neg_vol
)
post_rel <- inner_join(post_rel_tweets, mojo, by = c("mojo_id" = "movie_id"))
post_rel <- post_rel %>%
mutate(
opening_weekend = opening_weekend / 1000000,
domestic_total_gross = domestic_total_gross / 1000000
)
summary( lm(log(domestic_total_gross - opening_weekend) ~ log(vol) + log(pos_neg_ratio),
data = post_rel) )
summary( lm(log(domestic_total_gross) ~ log(vol) + log(pos_neg_ratio),
data = post_rel) )
summary( lm(log(domestic_total_gross) ~ log(vol) + log(pos_neg_ratio),
data = post_rel) )
summary( lm(log(domestic_total_gross - opening_weekend) ~ log(vol) + log(pos_neg_ratio),
data = post_rel) )
summary( lm(log(domestic_total_gross - opening_weekend) ~ log(vol) + log(pos_pct) + log(neg_pct),
data = post_rel) )
post_rel <- post_rel %>%
mutate(pre_vol           = pre_rel$pre_vol,
pre_pos_pct       = pre_rel$pos_pct,
pre_neg_pct       = pre_rel$neg_pct,
pre_pos_neg_ratio = pre$pos_neg_ratio)
post_rel <- post_rel %>%
mutate(pre_vol           = pre_rel$pre_vol,
pre_pos_pct       = pre_rel$pos_pct,
pre_neg_pct       = pre_rel$neg_pct,
pre_pos_neg_ratio = pre_rel$pos_neg_ratio)
summary( lm(log(domestic_total_gross - opening_weekend) ~ log(vol) + log(pos_pct) + log(neg_pct) + log(pre_pos_pct) + log(pre_neg_pct),
data = post_rel) )
summary( lm(log(domestic_total_gross - opening_weekend) ~ log(vol) + log(pos_pct) + log(neg_pct) +
log(pre_pos_pct) + log(pre_neg_pct) + log(pre_vol),
data = post_rel) )
summary( lm(log(domestic_total_gross) ~ log(vol) + log(pos_pct) + log(neg_pct) +
log(pre_pos_pct) + log(pre_neg_pct) + log(pre_vol),
data = post_rel) )
summary( lm(log(domestic_total_gross - opening_weekend) ~ log(vol) + log(pos_neg_ratio) + log(pre_vol),
data = post_rel) )
summary( lm(log(domestic_total_gross - opening_weekend) ~ log(vol) + log(pos_neg_ratio) + log(pre_vol) + log(pre_pos_neg_ratio),
data = post_rel) )
summary( lm(log(domestic_total_gross - opening_weekend) ~ log(vol) * log(pos_neg_ratio),
data = post_rel) )
library("readr")
install.packages("blogdown")
blogdown::install_hugo()
setwd("~/Documents/test-site")
blogdown::new_site(theme="gcushen/hugo-academic")
blogdown::serve_site()
